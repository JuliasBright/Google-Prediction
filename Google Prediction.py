# -*- coding: utf-8 -*-
"""Copy of Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14OXQnsC5COPOABczPGymCDWD26KIEkwV
"""

import pandas as pd
import numpy as np
from sklearn.svm import SVR
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

"""Load Dataset"""

from google.colab import files
uploaded= files.upload()
df = pd.read_csv('GOOG_30_days.csv')
df.head(7)

#Create Variables List
dates = []
prices = []

#Get the no of rows and colomns in the data set
df.shape

#get last of the row
df.tail(1)

#get all the data except for the last row
df = df.head(len(df)-1)

#The new shape of the data
df.shape

#get all the rows from the Date coloumn
df_dates = df.loc[:, 'Date']

#Get all the rows from the open coloumn
df_open = df.loc[:, 'Open']

#create the independent data set x
for data in df_dates:
  dates.append([int(date.split('-')[2]])

#create the dependent data set y
for open_price in df_open:
  prices.append(float(open_price))

#see what we recoreded
print(dates)

def predict_prices(dates,prices, x):
  #create three support vector regression model
svr_lin = SVR(kernel='linear', C=1e3)
svr_poly= SVR(kernel='poly' C=1e3, degree=2)
svr_rbf = SVR(kernel='rbf',C=1e3, gamma=0.1)

#Train theSVR model
svr_lin.fit(dates,prices)
svr_poly.fit(dates,prices)
svr_rbf.fit(dates,prices)

#create a Linear Regression
lin_reg =LinearRegression()
#Train linear Regresiion Model
lin_reg.fit(dates,prices)

#plot the model on a graph to see which ahs the best fit
plt.scatter(dates,prices, color='black, label='Data')
plt.plot(dates svr_rbf.predict(dates), color='red', label="SVR RBF")

#plot the model on a graph to see which ahs the best fit
plt.scatter(dates,prices, color='black, label='Data')
plt.plot(dates svr_rbf.predict(dates), color='red', label="SVR RBF")
plt.plot(dates svr_poly.predict(dates),color='blue', label='SVR Poly')
plt.plot(dates svr_lin.predict(dates), color='green', label='SVR Linear')
plt.plot (dates lin_reg.predict(dates), color='orange', label'Linear Reg')
plt.xlabel('Days')
plt.ylabel('Price')
plt.title('Regression')
plt.legend
plt.show

#predict the prices on GOOG day
predicted_price = predict_prices(dates,prices,[[28]])
print (predicted price)